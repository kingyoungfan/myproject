[app:myproject]
use = egg:myproject

reload_templates = true
debug_authorization = false
debug_notfound = false
debug_routematch = false
debug_templates = false
debug = false
default_locale_name = zh_CN

pyramid.includes =
    pyramid_tm
    pyramid_beaker
    pyramid_exclog
    pyramid_celery

jinja2.directories = myproject:templates
jinja2.filters =
truncate_html = myproject.filters:truncate_html

sms.scheduler=false
report.scheduler=false
daily.scheduler=false

env=product


emailTemplateDir=/email

[uwsgi]
socket = /tmp/uwsgi_myproject.sock
master = true
workers = 4
threads = 4
processes = 4

harakiri = 60
harakiri-verbose = true
limit-post = 5120000
post-buffering = 5120000
buffer-size = 32768

daemonize = ./logs/uwsgi_myproject.log
pidfile = ./logs/pid_5000.pid

listen = 256

max-requests = 1000

reload-on-as = 128
reload-on-rss = 96
no-orphans = true

log-slow = true

[pipeline:main]
pipeline =
    raven
    myproject

[filter:raven]
use = egg:raven#raven
dsn = https://b0f2fdb236b143da8a0517f43f481962:09a0e8db232f452087f1b5fbe6b854cc@app.getsentry.com/19476
include_paths = myproject
exclude_paths = myproject.test

[server:main]
use = egg:Paste#http
host = 0.0.0.0

[loggers]
keys = root, myproject,sqlalchemy,tests, exc_logger

[handlers]
keys = console, exc_handler

[formatters]
keys = generic, exc_formatter

[logger_root]
level = INFO
handlers = console

[logger_myproject]
level = DEBUG
handlers =
qualname = myproject

[logger_tests]
level = INFO
handlers =
qualname = myproject.tests


[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[logger_exc_logger]
level = ERROR
handlers = exc_handler
qualname = exc_logger

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[handler_exc_handler]
class = FileHandler
args = ('./logs/exception-myproject.log',)
level = ERROR
formatter = exc_formatter

[formatter_exc_formatter]
format = %(asctime)s %(message)s

# End logging configuration